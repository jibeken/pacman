–ß—Ç–æ —Ç–∞–∫–æ–µ Grid (–°–µ—Ç–∫–∞) –≤ Pacman?
Grid ‚Äî —ç—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Å–µ—Ç–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∏—Ç –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –Ω–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–µ —è—á–µ–π–∫–∏ (–∫–ª–µ—Ç–∫–∏). –í Pacman –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã (—Å—Ç–µ–Ω—ã, —Ç–æ—á–∫–∏, –ü–∞–∫–º–∞–Ω, –ø—Ä–∏–∑—Ä–∞–∫–∏) –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ —ç—Ç–æ–π —Å–µ—Ç–∫–µ –∏ –¥–≤–∏–≥–∞—é—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –ø–æ –µ—ë –ª–∏–Ω–∏—è–º.

üî∑ –ö–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω Grid –≤ –≤–∞—à–µ–º –∫–æ–¥–µ?
–ò–∑ –≤–∞—à–µ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞:

python
layout = LEVEL_LAYOUTS[level_index]          # –ë–µ—Ä—ë–º —Å—Ö–µ–º—É —É—Ä–æ–≤–Ω—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫)
cell_width = SCREEN_WIDTH // len(layout[0])  # –®–∏—Ä–∏–Ω–∞ 1 –∫–ª–µ—Ç–∫–∏
cell_height = SCREEN_HEIGHT // len(layout)   # –í—ã—Å–æ—Ç–∞ 1 –∫–ª–µ—Ç–∫–∏
LEVEL_LAYOUTS ‚Äî —ç—Ç–æ —Å–ø–∏—Å–æ–∫ —É—Ä–æ–≤–Ω–µ–π, –≥–¥–µ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ["#####", "#...#", "#####"]).

–°–∏–º–≤–æ–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, #, ., P) –æ–±–æ–∑–Ω–∞—á–∞—é—Ç –æ–±—ä–µ–∫—Ç—ã:

# ‚Äî —Å—Ç–µ–Ω–∞

. ‚Äî —Ç–æ—á–∫–∞

P ‚Äî —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –ü–∞–∫–º–∞–Ω–∞

üî∑ –ü—Ä–∏–º–µ—Ä Grid –¥–ª—è Pacman
–î–æ–ø—É—Å—Ç–∏–º, —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å –∑–∞–¥–∞–Ω —Ç–∞–∫:

python
LEVEL_LAYOUTS = [
    [
        "#######",
        "#.....#",
        "#.###.#",
        "#.# #.#",
        "#######"
    ]
]
–≠—Ç–æ —Å–æ–∑–¥–∞—ë—Ç —Å–µ—Ç–∫—É 7x5 (7 –∫–ª–µ—Ç–æ–∫ –≤ —à–∏—Ä–∏–Ω—É, 5 –≤ –≤—ã—Å–æ—Ç—É):

#######
#.....#
#.###.#
#.# #.#
#######
–ö–∞–∂–¥–∞—è # ‚Äî —Å—Ç–µ–Ω–∞ (–∑–∞–Ω–∏–º–∞–µ—Ç 1 –∫–ª–µ—Ç–∫—É).

–ö–∞–∂–¥–∞—è . ‚Äî —Ç–æ—á–∫–∞ (—Ç–∞–∫–∂–µ 1 –∫–ª–µ—Ç–∫—É).

üî∑ –ö–∞–∫ Grid –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∏–≥—Ä–µ?
–†–∞–∑–º–µ—Ä—ã –∫–ª–µ—Ç–æ–∫

–ï—Å–ª–∏ SCREEN_WIDTH = 700, –∞ –≤ —É—Ä–æ–≤–Ω–µ 7 —Å—Ç–æ–ª–±—Ü–æ–≤, —Ç–æ:

python
cell_width = 700 // 7 = 100  # –®–∏—Ä–∏–Ω–∞ –∫–ª–µ—Ç–∫–∏ = 100 –ø–∏–∫—Å–µ–ª–µ–π
–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä–µ–∫—Ç–æ–≤ –≤—ã—á–∏—Å–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–æ–º–µ—Ä–∞ –∫–ª–µ—Ç–æ–∫:

python
x = column_index * cell_width  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
y = row_index * cell_height    # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
–î–≤–∏–∂–µ–Ω–∏–µ –ü–∞–∫–º–∞–Ω–∞ –∏ –ø—Ä–∏–∑—Ä–∞–∫–æ–≤

–û–Ω–∏ –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –Ω–∞ 1 –∫–ª–µ—Ç–∫—É –∑–∞ —à–∞–≥, –∞ –Ω–µ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ.

–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π —Å–æ —Å—Ç–µ–Ω–∞–º–∏:

python
new_x = pacman.x + pacman.speed
new_col = new_x // cell_width  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–∏–∫—Å–µ–ª–∏ –≤ –Ω–æ–º–µ—Ä –∫–ª–µ—Ç–∫–∏
if layout[row][new_col] == "#":
    # –°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å–æ —Å—Ç–µ–Ω–æ–π!
–†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ç–æ—á–µ–∫ –∏ —Å—Ç–µ–Ω

–ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Ä–æ–≤–Ω—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ layout –∏ —Ä–∞—Å—Å—Ç–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç—ã –≤ —Ü–µ–Ω—Ç—Ä—ã –∫–ª–µ—Ç–æ–∫:

python
for row in range(len(layout)):
    for col in range(len(layout[row])):
        if layout[row][col] == ".":
            dot = Dot(col * cell_width + cell_width//2, 
                     row * cell_height + cell_height//2)
            self.dots.append(dot)
üî∑ –ó–∞—á–µ–º Grid –≤ Pacman?
–ü—Ä–æ—Å—Ç–æ—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

–î–≤–∏–∂–µ–Ω–∏–µ ¬´–ø–æ –∫–ª–µ—Ç–∫–∞–º¬ª –¥–µ–ª–∞–µ—Ç –∏–≥—Ä—É –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–π (–∫–∞–∫ –≤ —à–∞—Ö–º–∞—Ç–∞—Ö).

–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–ª–ª–∏–∑–∏–π

–ü—Ä–æ–≤–µ—Ä—è—Ç—å —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å —Å–µ—Ç–∫–æ–π –ø—Ä–æ—â–µ, —á–µ–º —Å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞–º–∏.

–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É—Ä–æ–≤–Ω–µ–π

–£—Ä–æ–≤–Ω–∏ –ª–µ–≥–∫–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã.

üî∑ –ö–∞–∫ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Grid?
–î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –º–æ–∂–Ω–æ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —Å–µ—Ç–∫—É:

python
# –†–∏—Å—É–µ–º —Å–µ—Ç–∫—É (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
for x in range(0, SCREEN_WIDTH, cell_width):
    pygame.draw.line(screen, (50, 50, 50), (x, 0), (x, SCREEN_HEIGHT))
for y in range(0, SCREEN_HEIGHT, cell_height):
    pygame.draw.line(screen, (50, 50, 50), (0, y), (SCREEN_WIDTH, y))
–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è –æ–±—ä–µ–∫—Ç—ã.


# ==================== –ò–ú–ü–û–†–¢–´ ====================
import math        # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π (sin, cos, sqrt –∏ —Ç.–¥.)
import pygame      # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä (—Ä–∏—Å–æ–≤–∞–Ω–∏–µ, –∑–≤—É–∫, —Å–æ–±—ã—Ç–∏—è)
import random      # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
import sys         # –°–∏—Å—Ç–µ–º–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ (–¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã)

# ==================== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø PYGAME ====================
pygame.init()                    # –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –º–æ–¥—É–ª–∏ pygame
pygame.mixer.init()              # –ó–∞–ø—É—Å–∫–∞–µ—Ç –∑–≤—É–∫–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É pygame

# –ó–ê–ì–†–£–ó–ö–ê –ò –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï –ú–£–ó–´–ö–ò
pygame.mixer_music.load("pac-man-1.mp3")  # –ó–∞–≥—Ä—É–∂–∞–µ—Ç –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç—å
pygame.mixer_music.play(1)                # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –º—É–∑—ã–∫—É 1 —Ä–∞–∑

# –û–ñ–ò–î–ê–ù–ò–ï –û–ö–û–ù–ß–ê–ù–ò–Ø –ü–ï–†–í–û–ô –ú–ï–õ–û–î–ò–ò
while pygame.mixer.music.get_busy():      # get_busy() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –º—É–∑—ã–∫–∞ –∏–≥—Ä–∞–µ—Ç
    pygame.time.Clock().tick(10)          # –ñ–¥—ë—Ç 1/10 —Å–µ–∫—É–Ω–¥—ã (100 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥)

# –ó–ê–ì–†–£–ó–ö–ê –ò –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï –í–¢–û–†–û–ô –ú–ï–õ–û–î–ò–ò
pygame.mixer_music.load("pac-man-2.mp3")  # –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Ç–æ—Ä—É—é –º–µ–ª–æ–¥–∏—é
pygame.mixer_music.play(2)                # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç 2 —Ä–∞–∑–∞

# ==================== –ö–û–ù–°–¢–ê–ù–¢–´ (–ù–ï–ò–ó–ú–ï–ù–Ø–ï–ú–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø) ====================
SCREEN_WIDTH = 800     # –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞ –∏–≥—Ä—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö
SCREEN_HEIGHT = 600    # –í—ã—Å–æ—Ç–∞ –æ–∫–Ω–∞ –∏–≥—Ä—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö
TILE_SIZE = 40         # –†–∞–∑–º–µ—Ä –æ–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏ –ª–∞–±–∏—Ä–∏–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
PACMAN_SPEED = 3       # –°–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è Pac-Man (–ø–∏–∫—Å–µ–ª–µ–π –∑–∞ –∫–∞–¥—Ä)
GHOST_SPEED = 2        # –°–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è –ø—Ä–∏–∑—Ä–∞–∫–æ–≤ (–ø–∏–∫—Å–µ–ª–µ–π –∑–∞ –∫–∞–¥—Ä)
DOT_SIZE = 8           # –†–∞–∑–º–µ—Ä —Ç–æ—á–µ–∫ –¥–ª—è —Å–±–æ—Ä–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
SCORE_PER_DOT = 10     # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –∑–∞ –æ–¥–Ω—É —Å—ä–µ–¥–µ–Ω–Ω—É—é —Ç–æ—á–∫—É

# –¶–í–ï–¢–ê –í –§–û–†–ú–ê–¢–ï RGB (Red, Green, Blue) - –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 0 –¥–æ 255
BLACK = (0, 0, 0)           # –ß—ë—Ä–Ω—ã–π —Ü–≤–µ—Ç (–Ω–µ—Ç –∫—Ä–∞—Å–Ω–æ–≥–æ, –∑–µ–ª—ë–Ω–æ–≥–æ, —Å–∏–Ω–µ–≥–æ)
WHITE = (255, 255, 255)     # –ë–µ–ª—ã–π —Ü–≤–µ—Ç (–º–∞–∫—Å–∏–º—É–º –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤)
YELLOW = (255, 255, 0)      # –ñ—ë–ª—Ç—ã–π —Ü–≤–µ—Ç (–∫—Ä–∞—Å–Ω—ã–π + –∑–µ–ª—ë–Ω—ã–π, –±–µ–∑ —Å–∏–Ω–µ–≥–æ)
RED = (255, 0, 0)           # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç (—Ç–æ–ª—å–∫–æ –∫—Ä–∞—Å–Ω—ã–π)
PINK = (255, 192, 203)      # –†–æ–∑–æ–≤—ã–π —Ü–≤–µ—Ç
CYAN = (0, 255, 255)        # –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç (–∑–µ–ª—ë–Ω—ã–π + —Å–∏–Ω–∏–π)
ORANGE = (255, 165, 0)      # –û—Ä–∞–Ω–∂–µ–≤—ã–π —Ü–≤–µ—Ç
BLUE = (0, 0, 255)          # –°–∏–Ω–∏–π —Ü–≤–µ—Ç (—Ç–æ–ª—å–∫–æ —Å–∏–Ω–∏–π)
GREEN = (0, 255, 0)         # –ó–µ–ª—ë–Ω—ã–π —Ü–≤–µ—Ç (—Ç–æ–ª—å–∫–æ –∑–µ–ª—ë–Ω—ã–π)
WALL_COLOR = (33, 33, 222)  # –¶–≤–µ—Ç —Å—Ç–µ–Ω (—Ç—ë–º–Ω–æ-—Å–∏–Ω–∏–π)

# –°–û–ó–î–ê–ù–ò–ï –û–ö–ù–ê –ò–ì–†–´
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))  # –°–æ–∑–¥–∞—ë—Ç –æ–∫–Ω–æ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
pygame.display.set_caption("Pac-Man")                           # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
clock = pygame.time.Clock()                                      # –°–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è FPS

# –°–û–°–¢–û–Ø–ù–ò–Ø –ò–ì–†–´ (–∫–∞–∫ enum - –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ)
MENU = 0              # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
PLAYING = 1           # –ò–≥—Ä–∞ –∏–¥—ë—Ç
GAME_OVER = 2         # –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞ (–ø—Ä–æ–∏–≥—Ä–∞–ª)
WIN = 3               # –ü–æ–±–µ–¥–∞ (–ø—Ä–æ—à—ë–ª –≤—Å–µ —É—Ä–æ–≤–Ω–∏)
LEVEL_COMPLETE = 4    # –£—Ä–æ–≤–µ–Ω—å –∑–∞–≤–µ—Ä—à—ë–Ω

# ==================== –ö–ê–†–¢–´ –£–†–û–í–ù–ï–ô ====================
# –≠—Ç–æ –¥–≤—É–º–µ—Ä–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã (—Å–ø–∏—Å–∫–∏ —Å–ø–∏—Å–∫–æ–≤), –≥–¥–µ –∫–∞–∂–¥–∞—è —Ü–∏—Ñ—Ä–∞ –æ–∑–Ω–∞—á–∞–µ—Ç —Ç–∏–ø –∫–ª–µ—Ç–∫–∏:
# 0 = –ø—É—Å—Ç–æ–µ –º–µ—Å—Ç–æ (–º–æ–∂–Ω–æ —Ö–æ–¥–∏—Ç—å)
# 1 = —Å—Ç–µ–Ω–∞ (–Ω–µ–ª—å–∑—è –ø—Ä–æ—Ö–æ–¥–∏—Ç—å)
# 2 = —Ç–æ—á–∫–∞ (–µ–¥–∞ –¥–ª—è Pac-Man)
# 3 = –±–æ–ª—å—à–∞—è —Ç–æ—á–∫–∞ (power pellet - –¥–∞—ë—Ç —Å–∏–ª—É)
# 4 = —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è Pac-Man
# 5 = —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –ø—Ä–∏–∑—Ä–∞–∫–∞ 1
# 6 = —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –ø—Ä–∏–∑—Ä–∞–∫–∞ 2
# 7 = —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –ø—Ä–∏–∑—Ä–∞–∫–∞ 3
# 8 = —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –ø—Ä–∏–∑—Ä–∞–∫–∞ 4

LEVEL_LAYOUTS = [
    # –£–†–û–í–ï–ù–¨ 1
    [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],  # –í–µ—Ä—Ö–Ω—è—è —Å—Ç–µ–Ω–∞
        [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1],  # –†—è–¥ —Å —Ç–æ—á–∫–∞–º–∏
        [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1],  # –°—Ç–µ–Ω—ã –∏ —Ç–æ—á–∫–∏
        [1, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1],  # –ë–æ–ª—å—à–∏–µ —Ç–æ—á–∫–∏ –ø–æ —É–≥–ª–∞–º
        # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —É—Ä–æ–≤–Ω—è
    ],
    # –£–†–û–í–ï–ù–¨ 2 –∏ –£–†–û–í–ï–ù–¨ 3 –∏–º–µ—é—Ç –ø–æ—Ö–æ–∂—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
]

# ==================== –ö–õ–ê–°–° –°–¢–ï–ù–´ ====================
class Wall:
    def __init__(self, x, y, width, height):
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ Wall (—Å—Ç–µ–Ω–∞)
        x, y - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ª–µ–≤–æ–≥–æ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É–≥–ª–∞
        width - —à–∏—Ä–∏–Ω–∞ —Å—Ç–µ–Ω—ã
        height - –≤—ã—Å–æ—Ç–∞ —Å—Ç–µ–Ω—ã
        """
        # pygame.Rect —Å–æ–∑–¥–∞—ë—Ç –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
        self.rect = pygame.Rect(x, y, width, height)

    def draw(self):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Å—Ç–µ–Ω—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        """
        # pygame.draw.rect —Ä–∏—Å—É–µ—Ç –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: (–ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å, —Ü–≤–µ—Ç, –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫)
        pygame.draw.rect(screen, WALL_COLOR, self.rect)

# ==================== –ö–õ–ê–°–° PAC-MAN ====================
class PacMan:
    def __init__(self, x, y):
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Pac-Man
        x, y - –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        """
        self.x = x                      # –ü–æ–∑–∏—Ü–∏—è –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
        self.y = y                      # –ü–æ–∑–∏—Ü–∏—è –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
        self.radius = 15                # –†–∞–¥–∏—É—Å –¥–ª—è —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
        self.direction = "right"        # –¢–µ–∫—É—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è
        self.next_direction = None      # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∫—É–¥–∞ —Ö–æ—á–µ—Ç –ø–æ–≤–µ—Ä–Ω—É—Ç—å –∏–≥—Ä–æ–∫
        self.speed = PACMAN_SPEED       # –°–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è
        
        # –ü–ï–†–ï–ú–ï–ù–ù–´–ï –î–õ–Ø –ê–ù–ò–ú–ê–¶–ò–ò
        self.animation_frame = 0        # –¢–µ–∫—É—â–∏–π –∫–∞–¥—Ä –∞–Ω–∏–º–∞—Ü–∏–∏
        self.animation_speed = 0.2      # –°–∫–æ—Ä–æ—Å—Ç—å —Å–º–µ–Ω—ã –∫–∞–¥—Ä–æ–≤
        self.mouth_open = True          # –û—Ç–∫—Ä—ã—Ç –ª–∏ —Ä–æ—Ç

        # –ó–ê–ì–†–£–ó–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô
        # .convert_alpha() –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—è
        self.image_open = pygame.image.load('pacman.png').convert_alpha()
        self.image_closed = pygame.image.load('pacman_closed.png').convert_alpha()

        # –ò–ó–ú–ï–ù–ï–ù–ò–ï –†–ê–ó–ú–ï–†–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô
        # pygame.transform.scale –∏–∑–º–µ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.image_open = pygame.transform.scale(self.image_open, (30, 30))
        self.image_closed = pygame.transform.scale(self.image_closed, (30, 30))

        # –°–û–•–†–ê–ù–ï–ù–ò–ï –û–†–ò–ì–ò–ù–ê–õ–û–í –î–õ–Ø –ü–û–í–û–†–û–¢–ê
        # .copy() —Å–æ–∑–¥–∞—ë—Ç –∫–æ–ø–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.original_open = self.image_open.copy()
        self.original_closed = self.image_closed.copy()

        # –ü–ï–†–ï–ú–ï–ù–ù–´–ï –î–õ–Ø –ü–õ–ê–í–ù–û–ì–û –ü–û–í–û–†–û–¢–ê
        self.smooth_rotation = 0        # –¢–µ–∫—É—â–∏–π —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞
        self.rotation_speed = 5         # –°–∫–æ—Ä–æ—Å—Ç—å –ø–æ–≤–æ—Ä–æ—Ç–∞

    def update(self, walls):
        """
        –ú–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Pac-Man (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä)
        walls - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
        """
        
        # ========== –ê–ù–ò–ú–ê–¶–ò–Ø –†–û–¢–ê ==========
        self.animation_frame += self.animation_speed
        if self.animation_frame >= 2:    # –¶–∏–∫–ª –∞–Ω–∏–º–∞—Ü–∏–∏: 0-1-2-0-1-2...
            self.animation_frame = 0
        
        # –†–æ—Ç –æ—Ç–∫—Ä—ã—Ç –≤ –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ —Ü–∏–∫–ª–∞ (0-1), –∑–∞–∫—Ä—ã—Ç –≤–æ –≤—Ç–æ—Ä–æ–π (1-2)
        self.mouth_open = self.animation_frame < 1

        # ========== –ü–õ–ê–í–ù–´–ô –ü–û–í–û–†–û–¢ ==========
        # –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∏ —É–≥–ª–æ–≤ –ø–æ–≤–æ—Ä–æ—Ç–∞
        target_rotation = {
            "right": 0,      # –í–ø—Ä–∞–≤–æ - 0 –≥—Ä–∞–¥—É—Å–æ–≤
            "left": 180,     # –í–ª–µ–≤–æ - 180 –≥—Ä–∞–¥—É—Å–æ–≤
            "up": 90,        # –í–≤–µ—Ä—Ö - 90 –≥—Ä–∞–¥—É—Å–æ–≤
            "down": 270      # –í–Ω–∏–∑ - 270 –≥—Ä–∞–¥—É—Å–æ–≤
        }.get(self.direction, 0)  # .get() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ 0 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ 360/0 –≥—Ä–∞–¥—É—Å–æ–≤
        if abs(self.smooth_rotation - target_rotation) > 180:
            if self.smooth_rotation < target_rotation:
                self.smooth_rotation += 360
            else:
                self.smooth_rotation -= 360

        # –ü–ª–∞–≤–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è –∫ —Ü–µ–ª–µ–≤–æ–º—É —É–≥–ª—É (20% –æ—Ç —Ä–∞–∑–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä)
        self.smooth_rotation += (target_rotation - self.smooth_rotation) * 0.2

        # ========== –°–û–•–†–ê–ù–ï–ù–ò–ï –°–¢–ê–†–û–ô –ü–û–ó–ò–¶–ò–ò ==========
        old_x, old_y = self.x, self.y

        # ========== –ü–†–û–í–ï–†–ö–ê –ü–û–í–û–†–û–¢–ê ==========
        if self.next_direction and self.next_direction != self.direction:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –≤ –Ω–æ–≤–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
            test_x, test_y = self.x, self.y
            
            # –í—ã—á–∏—Å–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
            if self.next_direction == "right":
                test_x += self.speed
            elif self.next_direction == "left":
                test_x -= self.speed
            elif self.next_direction == "up":
                test_y -= self.speed
            elif self.next_direction == "down":
                test_y += self.speed

            # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
            test_rect = self.get_rect_at(test_x, test_y)
            can_turn = True
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ —Å—Ç–µ–Ω–∞–º–∏
            for wall in walls:
                if test_rect.colliderect(wall.rect):  # colliderect –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤
                    can_turn = False
                    break  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏

            # –ï—Å–ª–∏ –º–æ–∂–µ–º –ø–æ–≤–µ—Ä–Ω—É—Ç—å, –º–µ–Ω—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            if can_turn:
                self.direction = self.next_direction

        # ========== –î–í–ò–ñ–ï–ù–ò–ï ==========
        if self.direction == "right":
            self.x += self.speed
        elif self.direction == "left":
            self.x -= self.speed
        elif self.direction == "up":
            self.y -= self.speed
        elif self.direction == "down":
            self.y += self.speed

        # ========== –ü–†–û–í–ï–†–ö–ê –°–¢–û–õ–ö–ù–û–í–ï–ù–ò–ô –°–û –°–¢–ï–ù–ê–ú–ò ==========
        pacman_rect = self.get_rect()
        collision = False
        
        for wall in walls:
            if pacman_rect.colliderect(wall.rect):
                collision = True
                break

        # –ï—Å–ª–∏ —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —Å—Ç–∞—Ä–æ–µ –º–µ—Å—Ç–æ
        if collision:
            self.x, self.y = old_x, old_y
            # –ò—â–µ–º –ª—é–±–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            self.direction = self.get_valid_direction(walls)
            self.next_direction = None

        # ========== –¢–ï–õ–ï–ü–û–†–¢–ê–¶–ò–Ø (–í–´–•–û–î –ó–ê –ì–†–ê–ù–ò–¶–´ –≠–ö–†–ê–ù–ê) ==========
        if self.x < 0:                    # –í—ã—à–ª–∏ —Å–ª–µ–≤–∞
            self.x = SCREEN_WIDTH         # –ü–æ—è–≤–ª—è–µ–º—Å—è —Å–ø—Ä–∞–≤–∞
        elif self.x > SCREEN_WIDTH:       # –í—ã—à–ª–∏ —Å–ø—Ä–∞–≤–∞
            self.x = 0                    # –ü–æ—è–≤–ª—è–µ–º—Å—è —Å–ª–µ–≤–∞
        if self.y < 0:                    # –í—ã—à–ª–∏ —Å–≤–µ—Ä—Ö—É
            self.y = SCREEN_HEIGHT        # –ü–æ—è–≤–ª—è–µ–º—Å—è —Å–Ω–∏–∑—É
        elif self.y > SCREEN_HEIGHT:      # –í—ã—à–ª–∏ —Å–Ω–∏–∑—É
            self.y = 0                    # –ü–æ—è–≤–ª—è–µ–º—Å—è —Å–≤–µ—Ä—Ö—É

    def draw(self):
        """
        –ú–µ—Ç–æ–¥ —Ä–∏—Å–æ–≤–∞–Ω–∏—è Pac-Man –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        """
        # –í—ã–±–∏—Ä–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä—Ç–∞
        if self.mouth_open:
            base_image = self.original_open
        else:
            base_image = self.original_closed

        # –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –Ω—É–∂–Ω—ã–π —É–≥–æ–ª
        rotated_image = pygame.transform.rotate(base_image, self.smooth_rotation)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        rect = rotated_image.get_rect(center=(self.x, self.y))
        
        # –†–∏—Å—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        # screen.blit() –∫–æ–ø–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∞
        screen.blit(rotated_image, rect.topleft)

    def get_rect(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
        """
        return pygame.Rect(self.x - self.radius, self.y - self.radius,
                          self.radius * 2, self.radius * 2)

    def get_rect_at(self, x, y):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
        """
        return pygame.Rect(x - self.radius, y - self.radius,
                          self.radius * 2, self.radius * 2)

    def get_valid_direction(self, walls):
        """
        –ù–∞—Ö–æ–¥–∏—Ç –ª—é–±–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ Pac-Man –∑–∞—Å—Ç—Ä—è–ª
        """
        directions = ["right", "left", "up", "down"]
        
        for dir in directions:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            test_x, test_y = self.x, self.y
            
            if dir == "right":
                test_x += self.speed
            elif dir == "left":
                test_x -= self.speed
            elif dir == "up":
                test_y -= self.speed
            elif dir == "down":
                test_y += self.speed

            test_rect = self.get_rect_at(test_x, test_y)
            collision = False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
            for wall in walls:
                if test_rect.colliderect(wall.rect):
                    collision = True
                    break

            # –ï—Å–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
            if not collision:
                return dir

        # –ï—Å–ª–∏ –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã, –æ—Å—Ç–∞—ë–º—Å—è –Ω–∞ –º–µ—Å—Ç–µ
        return self.direction

# ==================== –ö–õ–ê–°–° –ü–†–ò–ó–†–ê–ö–ê ====================
class Ghost:
    def __init__(self, x, y, color):
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–∏–∑—Ä–∞–∫–∞
        x, y - –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        color - —Ü–≤–µ—Ç –ø—Ä–∏–∑—Ä–∞–∫–∞
        """
        self.x = x
        self.y = y
        self.color = color
        self.radius = 15
        # random.choice –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
        self.direction = random.choice(["right", "left", "up", "down"])
        self.speed = GHOST_SPEED
        self.change_direction_counter = 0  # –°—á—ë—Ç—á–∏–∫ –¥–ª—è —Å–º–µ–Ω—ã –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–∑—Ä–∞–∫–∞
        self.image = pygame.image.load('ghost.webp')
        self.image = pygame.transform.scale(self.image, (30, 30))

    def update(self, pacman, walls):
        """
        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–∑—Ä–∞–∫–∞ (–ò–ò + –¥–≤–∏–∂–µ–Ω–∏–µ)
        pacman - –æ–±—ä–µ–∫—Ç Pac-Man –¥–ª—è –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        walls - —Å–ø–∏—Å–æ–∫ —Å—Ç–µ–Ω
        """
        self.change_direction_counter += 1
        
        # –ö–∞–∂–¥—ã–µ 60 –∫–∞–¥—Ä–æ–≤ (–ø—Ä–∏–º–µ—Ä–Ω–æ 1 —Å–µ–∫—É–Ω–¥–∞ –ø—Ä–∏ 60 FPS) –º–µ–Ω—è–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
        if self.change_direction_counter >= 60:
            # random.random() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0.0 –¥–æ 1.0
            if random.random() < 0.7:  # 70% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
                # ========== –ò–°–ö–£–°–°–¢–í–ï–ù–ù–´–ô –ò–ù–¢–ï–õ–õ–ï–ö–¢ ==========
                # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ Pac-Man
                dx = pacman.x - self.x  # –†–∞–∑–Ω–æ—Å—Ç—å –ø–æ X
                dy = pacman.y - self.y  # –†–∞–∑–Ω–æ—Å—Ç—å –ø–æ Y

                # –í—ã–±–∏—Ä–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫ Pac-Man
                # abs() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–º–æ–¥—É–ª—å —á–∏—Å–ª–∞)
                if abs(dx) > abs(dy):  # –ï—Å–ª–∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –±–æ–ª—å—à–µ
                    # –î–≤–∏–≥–∞–µ–º—Å—è –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
                    self.direction = "right" if dx > 0 else "left"
                else:  # –ï—Å–ª–∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –±–æ–ª—å—à–µ
                    # –î–≤–∏–≥–∞–µ–º—Å—è –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
                    self.direction = "down" if dy > 0 else "up"
            else:  # 30% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
                # –°–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç–∏
                self.direction = random.choice(["right", "left", "up", "down"])

            self.change_direction_counter = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫

        # ========== –î–í–ò–ñ–ï–ù–ò–ï ==========
        old_x, old_y = self.x, self.y  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—É—é –ø–æ–∑–∏—Ü–∏—é

        # –î–≤–∏–≥–∞–µ–º—Å—è –≤ —Ç–µ–∫—É—â–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
        if self.direction == "right":
            self.x += self.speed
        elif self.direction == "left":
            self.x -= self.speed
        elif self.direction == "up":
            self.y -= self.speed
        elif self.direction == "down":
            self.y += self.speed

        # ========== –ü–†–û–í–ï–†–ö–ê –°–¢–û–õ–ö–ù–û–í–ï–ù–ò–ô ==========
        ghost_rect = self.get_rect()
        for wall in walls:
            if ghost_rect.colliderect(wall.rect):
                # –ï—Å–ª–∏ —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å–æ —Å—Ç–µ–Ω–æ–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∏ –º–µ–Ω—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                self.x, self.y = old_x, old_y
                self.direction = random.choice(["right", "left", "up", "down"])
                break

        # ========== –¢–ï–õ–ï–ü–û–†–¢–ê–¶–ò–Ø ==========
        if self.x < 0:
            self.x = SCREEN_WIDTH
        elif self.x > SCREEN_WIDTH:
            self.x = 0
        if self.y < 0:
            self.y = SCREEN_HEIGHT
        elif self.y > SCREEN_HEIGHT:
            self.y = 0

    def draw(self):
        """
        –†–∏—Å–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–∑—Ä–∞–∫–∞
        """
        # –†–∏—Å—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–∑—Ä–∞–∫–∞, —Ü–µ–Ω—Ç—Ä–∏—Ä—É—è –µ–≥–æ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
        screen.blit(self.image, (self.x - 15, self.y - 15))

    def get_rect(self):
        """
        –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
        """
        return pygame.Rect(self.x - self.radius, self.y - self.radius, 
                          self.radius * 2, self.radius * 2)

# ==================== –ö–õ–ê–°–° –ë–û–õ–¨–®–û–ô –¢–û–ß–ö–ò ====================
class PowerPellet:
    def __init__(self, x, y):
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–æ–ª—å—à–æ–π —Ç–æ—á–∫–∏ (power pellet)
        """
        self.x = x
        self.y = y
        self.radius = DOT_SIZE
        self.collected = False          # –°–æ–±—Ä–∞–Ω–∞ –ª–∏ —Ç–æ—á–∫–∞
        self.animation_counter = 0      # –°—á—ë—Ç—á–∏–∫ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏

    def update(self):
        """
        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –±–æ–ª—å—à–æ–π —Ç–æ—á–∫–∏
        """
        self.animation_counter += 1
        if self.animation_counter >= 30:  # –°–±—Ä–æ—Å —Å—á—ë—Ç—á–∏–∫–∞ –∫–∞–∂–¥—ã–µ 30 –∫–∞–¥—Ä–æ–≤
            self.animation_counter = 0

    def draw(self):
        """
        –†–∏—Å–æ–≤–∞–Ω–∏–µ –±–æ–ª—å—à–æ–π —Ç–æ—á–∫–∏ —Å –ø—É–ª—å—Å–∏—Ä—É—é—â–µ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
        """
        if not self.collected:
            # math.sin —Å–æ–∑–¥–∞—ë—Ç —Å–∏–Ω—É—Å–æ–∏–¥–∞–ª—å–Ω—É—é –≤–æ–ª–Ω—É –¥–ª—è –ø—É–ª—å—Å–∞—Ü–∏–∏
            # abs() –¥–µ–ª–∞–µ—Ç –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏
            size_mod = abs(math.sin(self.animation_counter * 0.1)) * 2
            
            # pygame.draw.circle —Ä–∏—Å—É–µ—Ç –∫—Ä—É–≥
            # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: (–ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å, —Ü–≤–µ—Ç, —Ü–µ–Ω—Ç—Ä, —Ä–∞–¥–∏—É—Å)
            pygame.draw.circle(screen, WHITE, (self.x, self.y), self.radius + size_mod)

    def get_rect(self):
        """
        –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–±–æ—Ä–∞
        """
        return pygame.Rect(self.x - self.radius, self.y - self.radius, 
                          self.radius * 2, self.radius * 2)

# ==================== –ö–õ–ê–°–° –û–ë–´–ß–ù–û–ô –¢–û–ß–ö–ò ====================
class Dot:
    def __init__(self, x, y):
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–±—ã—á–Ω–æ–π —Ç–æ—á–∫–∏
        """
        self.x = x
        self.y = y
        self.radius = DOT_SIZE // 2     # // - —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ
        self.collected = False

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ—á–∫–∏
        self.image = pygame.image.load('dot.png')
        self.image = pygame.transform.scale(self.image, (DOT_SIZE, DOT_SIZE))

    def draw(self):
        """
        –†–∏—Å–æ–≤–∞–Ω–∏–µ —Ç–æ—á–∫–∏
        """
        if not self.collected:
            screen.blit(self.image, (self.x - self.radius, self.y - self.radius))

    def get_rect(self):
        """
        –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–±–æ—Ä–∞
        """
        return pygame.Rect(self.x - self.radius, self.y - self.radius, 
                          self.radius * 2, self.radius * 2)

# ==================== –ì–õ–ê–í–ù–´–ô –ö–õ–ê–°–° –ò–ì–†–´ ====================
class Game:
    def __init__(self):
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏–≥—Ä—ã
        """
        self.reset()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

    def reset(self):
        """
        –°–±—Ä–æ—Å –∏–≥—Ä—ã –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        """
        self.state = MENU               # –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        self.level = 0                  # –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å (–Ω–∞—á–∏–Ω–∞–µ–º —Å 0)
        self.pacman = None              # –û–±—ä–µ–∫—Ç Pac-Man
        self.ghosts = []                # –°–ø–∏—Å–æ–∫ –ø—Ä–∏–∑—Ä–∞–∫–æ–≤
        self.dots = []                  # –°–ø–∏—Å–æ–∫ –æ–±—ã—á–Ω—ã—Ö —Ç–æ—á–µ–∫
        self.power_pellets = []         # –°–ø–∏—Å–æ–∫ –±–æ–ª—å—à–∏—Ö —Ç–æ—á–µ–∫
        self.walls = []                 # –°–ø–∏—Å–æ–∫ —Å—Ç–µ–Ω
        self.score = 0                  # –°—á—ë—Ç –∏–≥—Ä–æ–∫–∞
        self.lives = 3                  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–µ–π
        self.load_level(self.level)     # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å

    def load_level(self, level_index):
        """
        –ó–∞–≥—Ä—É–∑–∫–∞ —É—Ä–æ–≤–Ω—è –ø–æ –∏–Ω–¥–µ–∫—Å—É
        level_index - –Ω–æ–º–µ—Ä —É—Ä–æ–≤–Ω—è –≤ –º–∞—Å—Å–∏–≤–µ LEVEL_LAYOUTS
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â—ë —É—Ä–æ–≤–Ω–∏
        if level_index >= len(LEVEL_LAYOUTS):
            self.state = WIN  # –ï—Å–ª–∏ —É—Ä–æ–≤–Ω–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å - –ø–æ–±–µ–¥–∞
            return

        # –û—á–∏—â–∞–µ–º –≤—Å–µ —Å–ø–∏—Å–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤
        self.dots = []
        self.power_pellets = []
        self.walls = []
        self.ghosts = []

        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç—É —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
        layout = LEVEL_LAYOUTS[level_index]
        
        # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏
        cell_width = SCREEN_WIDTH // len(layout[0])   # // - —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ
        cell_height = SCREEN_HEIGHT // len(layout)

        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π
        pacman_pos = None
        ghost_positions = []

        # ========== –ü–ê–†–°–ò–ù–ì –ö–ê–†–¢–´ ==========
        # enumerate() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        for y, row in enumerate(layout):        # y - –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏, row - —Å–∞–º–∞ —Å—Ç—Ä–æ–∫–∞
            for x, cell in enumerate(row):      # x - –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞, cell - –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª–µ—Ç–∫–∏
                # –í—ã—á–∏—Å–ª—è–µ–º —Ü–µ–Ω—Ç—Ä –∫–ª–µ—Ç–∫–∏
                cell_x = x * cell_width + cell_width // 2
                cell_y = y * cell_height + cell_height // 2

                if cell == 1:  # –°—Ç–µ–Ω–∞
                    # –°–æ–∑–¥–∞—ë–º —Å—Ç–µ–Ω—É –Ω–∞ –≤—Å—é –∫–ª–µ—Ç–∫—É
                    self.walls.append(Wall(x * cell_width, y * cell_height, 
                                         cell_width, cell_height))
                elif cell == 2:  # –û–±—ã—á–Ω–∞—è —Ç–æ—á–∫–∞
                    self.dots.append(Dot(cell_x, cell_y))
                elif cell == 3:  # –ë–æ–ª—å—à–∞—è —Ç–æ—á–∫–∞
                    self.power_pellets.append(PowerPellet(cell_x, cell_y))
                elif cell == 4:  # –°—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è Pac-Man
                    pacman_pos = (cell_x, cell_y)
                elif cell >= 5 and cell <= 8:  # –°—Ç–∞—Ä—Ç–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–∏–∑—Ä–∞–∫–æ–≤
                    # cell - 5 –¥–∞—ë—Ç –∏–Ω–¥–µ–∫—Å –ø—Ä–∏–∑—Ä–∞–∫–∞ (0, 1, 2, 3)
                    ghost_positions.append((cell_x, cell_y, cell - 5))

        # ========== –°–û–ó–î–ê–ù–ò–ï PAC-MAN ==========
        if pacman_pos:  # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–æ–∑–∏—Ü–∏—é –Ω–∞ –∫–∞—Ä—Ç–µ
            self.pacman = PacMan(pacman_pos[0], pacman_pos[1])
        else:  # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, —Å—Ç–∞–≤–∏–º –≤ —Ü–µ–Ω—Ç—Ä —ç–∫—Ä–∞–Ω–∞
            self.pacman = PacMan(SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2)

        # ========== –°–û–ó–î–ê–ù–ò–ï –ü–†–ò–ó–†–ê–ö–û–í ==========
        ghost_colors = [RED, PINK, CYAN, ORANGE]  # –¶–≤–µ—Ç–∞ –¥–ª—è 4 –ø—Ä–∏–∑—Ä–∞–∫–æ–≤
        
        for pos in ghost_positions:
            # pos[0] = x, pos[1] = y, pos[2] = –∏–Ω–¥–µ–∫—Å —Ü–≤–µ—Ç–∞
            self.ghosts.append(Ghost(pos[0], pos[1], ghost_colors[pos[2]]))

        # –ï—Å–ª–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –Ω–µ —É–∫–∞–∑–∞–Ω—ã –ø—Ä–∏–∑—Ä–∞–∫–∏, —Å–æ–∑–¥–∞—ë–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö
        if not self.ghosts:  # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π
            self.ghosts = [
                Ghost(100, 100, RED),
                Ghost(SCREEN_WIDTH - 100, 100, PINK),
                Ghost(100, SCREEN_HEIGHT - 100, CYAN),
                Ghost(SCREEN_WIDTH - 100, SCREEN_HEIGHT - 100, ORANGE)
            ]

    def handle_events(self):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π (–Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à, –∑–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞)
        """
        # pygame.event.get() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π
        for event in pygame.event.get():
            if event.type == pygame.QUIT:  # –ù–∞–∂–∞–ª–∏ –∫—Ä–µ—Å—Ç–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
                pygame.quit()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º pygame
                sys.exit()     # –í—ã—Ö–æ–¥–∏–º –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã

            if event.type == pygame.KEYDOWN:  # –ù–∞–∂–∞–ª–∏ –∫–ª–∞–≤–∏—à—É
                if self.state == MENU:  # –í –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
                    if event.key == pygame.K_SPACE:  # –ù–∞–∂–∞–ª–∏ –ø—Ä–æ–±–µ–ª
                        self.state = PLAYING
                        
                elif self.state == GAME_OVER or self.state == WIN:  # –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞
                    if event.key == pygame.K_SPACE:  # –ü—Ä–æ–±–µ–ª –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
                        self.reset()
                        
                elif self.state == LEVEL_COMPLETE:  # –£—Ä–æ–≤–µ–Ω—å –∑–∞–≤–µ—Ä—à—ë–Ω
                    if event.key == pygame.K_SPACE:  # –ü—Ä–æ–±–µ–ª –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
                        self.level += 1
                        self.load_level(self.level)
                        self.state = PLAYING
                        
                elif self.state == PLAYING:  # –í–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã
                    # –£–ü–†–ê–í–õ–ï–ù–ò–ï PAC-MAN
                    if event.key == pygame.K_RIGHT:    # –°—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ
                        self.pacman.next_direction = "right"
                    elif event.key == pygame.K_LEFT:   # –°—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ
                        self.pacman.next_direction = "left"
                    elif event.key == pygame.K_UP:     # –°—Ç—Ä–µ–ª–∫–∞ –≤–≤–µ—Ä—Ö
                        self.pacman.next_direction = "up"
                    elif event.key == pygame.K_DOWN:   # –°—Ç—Ä–µ–ª–∫–∞ –≤–Ω–∏–∑
                        self.pacman.next_direction = "down"

    def update(self):
        """
        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∏–≥—Ä—ã (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä)
        """
        if self.state == PLAYING:  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–≥—Ä–∞ –∏–¥—ë—Ç
            
            # ========== –û–ë–ù–û–í–õ–ï–ù–ò–ï PAC-MAN ==========
            self.pacman.update(self.walls)

            # ========== –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–ò–ó–†–ê–ö–û–í ==========
            for ghost in self.ghosts:
                ghost.update(self.pacman, self.walls)

                # –ü–†–û–í–ï–†–ö–ê –°–¢–û–õ–ö–ù–û–í–ï–ù–ò–Ø PAC-MAN –° –ü–†–ò–ó–†–ê–ö–û–ú
                if self.pacman.get_rect().colliderect(ghost.get_rect()):
                    self.lives -= 1  # –û—Ç–Ω–∏–º–∞–µ–º –∂–∏–∑–Ω—å
                    if self.lives <= 0:  # –ï—Å–ª–∏ –∂–∏–∑–Ω–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
                        self.state = GAME_OVER
                    else:
                        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —É—Ä–æ–≤–µ–Ω—å (—Å–±—Ä–æ—Å –ø–æ–∑–∏—Ü–∏–π)
                        self.load_level(self.level)
                        break  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø—Ä–∏–∑—Ä–∞–∫–æ–≤

            # ========== –°–ë–û–† –û–ë–´–ß–ù–´–• –¢–û–ß–ï–ö ==========
            for dot in self.dots:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º: —Ç–æ—á–∫–∞ –Ω–µ —Å–æ–±—Ä–∞–Ω–∞ –ò Pac-Man –∫–∞—Å–∞–µ—Ç—Å—è –µ—ë
                if not dot.collected and self.pacman.get_rect().colliderect(dot.get_rect()):
                    dot.collected = True           # –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ —Å–æ–±—Ä–∞–Ω–Ω—É—é
                    self.score += SCORE_PER_DOT    # –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∫–∏

            # ========== –°–ë–û–† –ë–û–õ–¨–®–ò–• –¢–û–ß–ï–ö ==========
            for pellet in self.power_pellets:
                if not pellet.collected and self.pacman.get_rect().colliderect(pellet.get_rect()):
                    pellet.collected = True
                    self.score += SCORE_PER_DOT * 5  # –ë–æ–ª—å—à–µ –æ—á–∫–æ–≤ –∑–∞ –±–æ–ª—å—à—É—é —Ç–æ—á–∫—É
                    # TODO: –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É—è–∑–≤–∏–º–æ—Å—Ç—å –ø—Ä–∏–∑—Ä–∞–∫–æ–≤

            # ========== –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ò–Ø –£–†–û–í–ù–Ø ==========
            # all() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã True
            all_dots_collected = all(dot.collected for dot in self.dots)
            all_pellets_collected = all(pellet.collected for pellet in self.power_pellets)
            
            if all_dots_collected and all_pellets_collected:
                if self.level < len(LEVEL_LAYOUTS) - 1:  # –ï—Å—Ç—å –µ—â—ë —É—Ä–æ–≤–Ω–∏
                    self.state = LEVEL_COMPLETE
                else:  # –≠—Ç–æ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å
                    self.state = WIN

    def draw(self):
        """
        –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤—Å–µ–≥–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        """
        screen.fill(BLACK)  # –ó–∞–ª–∏–≤–∞–µ–º —ç–∫—Ä–∞–Ω —á—ë—Ä–Ω—ã–º —Ü–≤–µ—Ç–æ–º

        if self.state == MENU:
            # ========== –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ==========
            # pygame.font.SysFont —Å–æ–∑–¥–∞—ë—Ç —à—Ä–∏—Ñ—Ç (None = —Å–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç, 72 = —Ä–∞–∑–º–µ—Ä)
            font = pygame.font.SysFont(None, 72)
            # .render —Å–æ–∑–¥–∞—ë—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ (—Ç–µ–∫—Å—Ç, —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ, —Ü–≤–µ—Ç)
            title = font.render("PAC-MAN", True, YELLOW)
            # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            screen.blit(title, (SCREEN_WIDTH // 2 - title.get_width() // 2, SCREEN_HEIGHT // 3))

            font = pygame.font.SysFont(None, 36)
            instruction = font.render("Press SPACE to start", True, WHITE)
            screen.blit(instruction, (SCREEN_WIDTH // 2 - instruction.get_width() // 2, SCREEN_HEIGHT // 2))

        elif self.state == PLAYING or self.state == GAME_OVER or self.state == LEVEL_COMPLETE or self.state == WIN:
            # ========== –ò–ì–†–û–í–û–ô –≠–ö–†–ê–ù ==========
            
            # –†–∏—Å—É–µ–º —Å—Ç–µ–Ω—ã
            for wall in self.walls:
                wall.draw()

            # –†–∏—Å—É–µ–º –æ–±—ã—á–Ω—ã–µ —Ç–æ—á–∫–∏
            for dot in self.dots:
                dot.draw()

            # –†–∏—Å—É–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –±–æ–ª—å—à–∏–µ —Ç–æ—á–∫–∏
            for pellet in self.power_pellets:
                pellet.update()  # –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
                pellet.draw()

            # –†–∏—Å—É–µ–º Pac-Man
            self.pacman.draw()

            # –†–∏—Å—É–µ–º –ø—Ä–∏–∑—Ä–∞–∫–æ–≤
            for ghost in self.ghosts:
                ghost.draw()

            # ========== –ò–ù–¢–ï–†–§–ï–ô–° ==========
            font = pygame.font.SysFont(None, 36)
            
            # –°—á—ë—Ç (—Å–ª–µ–≤–∞ –≤–≤–µ—Ä—Ö—É)
            score_text = font.render(f"Score: {self.score}", True, WHITE)
            screen.blit(score_text, (10, 10))

            # –ñ–∏–∑–Ω–∏ (—Å–ø—Ä–∞–≤–∞ –≤–≤–µ—Ä—Ö—É)
            lives_text = font.render(f"Lives: {self.lives}", True, WHITE)
            screen.blit(lives_text, (SCREEN_WIDTH - lives_text.get_width() - 10, 10))

            # –£—Ä–æ–≤–µ–Ω—å (–ø–æ —Ü–µ–Ω—Ç—Ä—É –≤–≤–µ—Ä—Ö—É)
            level_text = font.render(f"Level: {self.level + 1}", True, WHITE)
            screen.blit(level_text, (SCREEN_WIDTH // 2 - level_text.get_width() // 2, 10))

            # ========== –≠–ö–†–ê–ù–´ –û–ö–û–ù–ß–ê–ù–ò–Ø ==========
            if self.state == GAME_OVER:
                # –ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —á—ë—Ä–Ω—ã–π —Ñ–æ–Ω
                overlay = pygame.Surface((SCREEN_WIDTH, SCREEN_HEIGHT), pygame.SRCALPHA)
                overlay.fill((0, 0, 0, 128))  # 128 = 50% –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
                screen.blit(overlay, (0, 0))

                font = pygame.font.SysFont(None, 72)
                game_over = font.render("GAME OVER", True, RED)
                screen.blit(game_over, (SCREEN_WIDTH // 2 - game_over.get_width() // 2, SCREEN_HEIGHT // 3))

                font = pygame.font.SysFont(None, 48)
                final_score = font.render(f"Final Score: {self.score}", True, WHITE)
                screen.blit(final_score, (SCREEN_WIDTH // 2 - final_score.get_width() // 2, SCREEN_HEIGHT // 2))

                font = pygame.font.SysFont(None, 36)
                restart = font.render("Press SPACE to restart", True, WHITE)
                screen.blit(restart, (SCREEN_WIDTH // 2 - restart.get_width() // 2, SCREEN_HEIGHT // 2 + 60))

            elif self.state == WIN:
                # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ —ç–∫—Ä–∞–Ω—É Game Over, –Ω–æ —Å —Ç–µ–∫—Å—Ç–æ–º –ø–æ–±–µ–¥—ã
                overlay = pygame.Surface((SCREEN_WIDTH, SCREEN_HEIGHT), pygame.SRCALPHA)
                overlay.fill((0, 0, 0, 128))
                screen.blit(overlay, (0, 0))

                font = pygame.font.SysFont(None, 72)
                win_text = font.render("YOU WIN!", True, GREEN)
                screen.blit(win_text, (SCREEN_WIDTH // 2 - win_text.get_width() // 2, SCREEN_HEIGHT // 3))

                # ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ

            elif self.state == LEVEL_COMPLETE:
                # –≠–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
                overlay = pygame.Surface((SCREEN_WIDTH, SCREEN_HEIGHT), pygame.SRCALPHA)
                overlay.fill((0, 0, 0, 128))
                screen.blit(overlay, (0, 0))

                font = pygame.font.SysFont(None, 72)
                level_complete = font.render(f"LEVEL {self.level + 1} COMPLETE!", True, GREEN)
                screen.blit(level_complete, (SCREEN_WIDTH // 2 - level_complete.get_width() // 2, SCREEN_HEIGHT // 3))

                # ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥

        # pygame.display.flip() –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å—ë –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–Ω–æ–µ)
        pygame.display.flip()

# ==================== –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ====================
def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
    """
    game = Game()  # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∏–≥—Ä—ã

    running = True
    while running:  # –ì–ª–∞–≤–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
        game.handle_events()  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è (–∫–ª–∞–≤–∏—à–∏, –º—ã—à—å)
        game.update()         # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É –∏–≥—Ä—ã
        game.draw()           # –†–∏—Å—É–µ–º –≤—Å—ë –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        clock.tick(60)        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 60 FPS (–∫–∞–¥—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É)

# ==================== –ó–ê–ü–£–°–ö –ü–†–û–ì–†–ê–ú–ú–´ ====================
if __name__ == "__main__":  # –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é (–Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω)
    main()                  # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    pygame.mixer.quit()     # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∑–≤—É–∫–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
    pygame.quit()           # –ó–∞–∫—Ä—ã–≤–∞–µ–º pygame
